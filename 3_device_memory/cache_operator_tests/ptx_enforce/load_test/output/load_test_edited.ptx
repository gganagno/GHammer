//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6kernelimPVmPf
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 16 .b8 $str[10] = {32, 73, 32, 97, 109, 32, 37, 100, 10, 0};

.visible .entry _Z6kernelimPVmPf(
	.param .u32 _Z6kernelimPVmPf_param_0,
	.param .u64 _Z6kernelimPVmPf_param_1,
	.param .u64 _Z6kernelimPVmPf_param_2,
	.param .u64 _Z6kernelimPVmPf_param_3
)
{
	.local .align 8 .b8 	__local_depot0[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<7>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<27>;
	.reg .b64 	%rd<23>;


	mov.u64 	%rd22, __local_depot0;
	cvta.local.u64 	%SP, %rd22;
	ld.param.u32 	%r9, [_Z6kernelimPVmPf_param_0];
	ld.param.u64 	%rd7, [_Z6kernelimPVmPf_param_2];
	ld.param.u64 	%rd6, [_Z6kernelimPVmPf_param_3];
	cvta.to.global.u64 	%rd1, %rd7;
	add.u64 	%rd8, %SP, 0;
	cvta.to.local.u64 	%rd9, %rd8;
	mov.u32 	%r10, %nctaid.x;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %ctaid.x;
	mad.lo.s32 	%r13, %r10, %r11, %r12;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %tid.y;
	mad.lo.s32 	%r16, %r13, %r14, %r15;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r19, %r16, %r17, %r18;
	st.local.u32 	[%rd9], %r19;
	mov.u64 	%rd10, $str;
	cvta.global.u64 	%rd11, %rd10;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r20, [retval0+0];
	
	//{
	}// Callseq End 0
	setp.eq.s32	%p1, %r9, 0;
	mov.f32 	%f4, 0f00000000;
	@%p1 bra 	BB0_10;

	and.b32  	%r21, %r9, 3;
	mov.u64 	%rd21, 0;
	setp.eq.s32	%p2, %r21, 0;
	mov.u32 	%r26, %r9;
	@%p2 bra 	BB0_7;

	setp.eq.s32	%p3, %r21, 1;
	mov.u32 	%r24, %r9;
	@%p3 bra 	BB0_6;

	setp.eq.s32	%p4, %r21, 2;
	mov.u32 	%r23, %r9;
	@%p4 bra 	BB0_5;

	add.s32 	%r23, %r9, -1;
	ld.volatile.global.u64 	%rd13, [%rd1];

BB0_5:
	add.s32 	%r24, %r23, -1;
	ld.volatile.global.u64 	%rd14, [%rd1];

BB0_6:
	add.s32 	%r26, %r24, -1;
	ld.cv.volatile.global.u64 	%rd21, [%rd1];

BB0_7:
	setp.lt.u32	%p5, %r9, 4;
	@%p5 bra 	BB0_9;

BB0_8:
	ld.volatile.global.u64 	%rd15, [%rd1];
	ld.volatile.global.u64 	%rd16, [%rd1];
	ld.volatile.global.u64 	%rd17, [%rd1];
	ld.cv.volatile.global.u64 	%rd21, [%rd1];
	add.s32 	%r26, %r26, -4;
	setp.ne.s32	%p6, %r26, 0;
	@%p6 bra 	BB0_8;

BB0_9:
	add.s64 	%rd18, %rd21, 666;
	cvt.u32.u64	%r22, %rd18;
	cvt.rn.f32.s32	%f4, %r22;

BB0_10:
	cvta.to.global.u64 	%rd19, %rd6;
	st.global.f32 	[%rd19], %f4;
	ret;
}

//We use the distinct value : 666 to trace the load of the host pointer.
We see that we add %rd21 to 666 so we change the :

	ld.volatile.global.u64 	%rd21, [%rd1];
	and
	ld.volatile.global.u64 	%rd21, [%rd1];


	to our preffered ld.cv.volatile.global.u64
	